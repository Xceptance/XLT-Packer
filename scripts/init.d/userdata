#! /bin/bash
# /etc/init.d/userdata
#

### BEGIN INIT INFO
# Provides:          userdata
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Apply userdata to /etc/hosts
# Description:       Apply userdata to /etc/hosts
### END INIT INFO

USERDATA_SCRIPT="/home/xlt/apply-userdata.sh"
USERDATA_BEGIN_FLAG="# User data entries START"
USERDATA_END_FLAG="# User data entries END"
HOSTS_FILE="/etc/hosts"
USERDATA_URL="http://169.254.169.254/latest/user-data"
PASSWORD_FILE="/home/xlt/.acpass"

function cleanup {
	SED="sed -i '/$USERDATA_BEGIN_FLAG/,/$USERDATA_END_FLAG/ { d }' $HOSTS_FILE"
	eval $SED
}

# Carry out specific functions when asked to by the system
case "$1" in
	start)
		# get the user data
		USERDATA=`curl -s -f $USERDATA_URL 2>&1`
		HOST_MAPPING=$USERDATA

		VALID=`echo $USERDATA | jq '.'`
		echo $VALID
		if [ '$VALID'!='' ]; then
				VALID_HOST_MAPPING=`echo $USERDATA | jq '.hostData' -r`
				if [ '$VALID_HOST_MAPPING'!='' ]; then
					HOST_MAPPING=$VALID_HOST_MAPPING
				fi

				PASSWORD=`echo $USERDATA | jq '.acPassword' -r`
				if [ '$PASSWORD'!='' ]; then
					sudo echo $PASSWORD > $PASSWORD_FILE
				else
					if [ -f $PASSWORD_FILE ]; then
						sudo rm -f $PASSWORD_FILE
					fi
				fi
		fi

		echo "Remove old user data"
		cleanup

		echo "Apply user data"
		sudo echo "$USERDATA_BEGIN_FLAG" >> $HOSTS_FILE
		sudo echo -E "$HOST_MAPPING" >> $HOSTS_FILE
		sudo echo "$USERDATA_END_FLAG" >> $HOSTS_FILE
		;;
	stop)
		cleanup
		;;
	*)
		echo "Usage: $0 {start|stop}"
		exit 0
		;;
esac

exit 0
